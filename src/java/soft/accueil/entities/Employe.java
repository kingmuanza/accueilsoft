package soft.accueil.entities;
// Generated 16 janv. 2018 13:43:22 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Employe generated by hbm2java
 */
@Entity
@Table(name="employe"
    ,catalog="accueilsoft"
)
public class Employe  implements java.io.Serializable {


     private Integer idemploye;
     private Bureau bureau;
     private Poste poste;
     private String noms;
     private String prenoms;
     private String telEntreprise;
     private String autreContact;
     private String image;
     private Integer idutilisateur;
     private byte[] imageblob;
     private Set<Message> messagesForIdrecepteur = new HashSet<Message>(0);
     private Set<Visite> visites = new HashSet<Visite>(0);
     private Set<Message> messagesForIdemetteur = new HashSet<Message>(0);
     private Set<Colis> colises = new HashSet<Colis>(0);
     private Set<Entree> entrees = new HashSet<Entree>(0);
     private Set<Urgence> urgences = new HashSet<Urgence>(0);
     private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);

    public Employe() {
    }

    public Employe(Bureau bureau, Poste poste, String noms, String prenoms, String telEntreprise, String autreContact, String image, Integer idutilisateur, byte[] imageblob, Set<Message> messagesForIdrecepteur, Set<Visite> visites, Set<Message> messagesForIdemetteur, Set<Colis> colises, Set<Entree> entrees, Set<Urgence> urgences, Set<Utilisateur> utilisateurs) {
       this.bureau = bureau;
       this.poste = poste;
       this.noms = noms;
       this.prenoms = prenoms;
       this.telEntreprise = telEntreprise;
       this.autreContact = autreContact;
       this.image = image;
       this.idutilisateur = idutilisateur;
       this.imageblob = imageblob;
       this.messagesForIdrecepteur = messagesForIdrecepteur;
       this.visites = visites;
       this.messagesForIdemetteur = messagesForIdemetteur;
       this.colises = colises;
       this.entrees = entrees;
       this.urgences = urgences;
       this.utilisateurs = utilisateurs;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idemploye", unique=true, nullable=false)
    public Integer getIdemploye() {
        return this.idemploye;
    }
    
    public void setIdemploye(Integer idemploye) {
        this.idemploye = idemploye;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idbureau")
    public Bureau getBureau() {
        return this.bureau;
    }
    
    public void setBureau(Bureau bureau) {
        this.bureau = bureau;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idposte")
    public Poste getPoste() {
        return this.poste;
    }
    
    public void setPoste(Poste poste) {
        this.poste = poste;
    }

    
    @Column(name="noms", length=45)
    public String getNoms() {
        return this.noms;
    }
    
    public void setNoms(String noms) {
        this.noms = noms;
    }

    
    @Column(name="prenoms", length=45)
    public String getPrenoms() {
        return this.prenoms;
    }
    
    public void setPrenoms(String prenoms) {
        this.prenoms = prenoms;
    }

    
    @Column(name="tel_entreprise", length=45)
    public String getTelEntreprise() {
        return this.telEntreprise;
    }
    
    public void setTelEntreprise(String telEntreprise) {
        this.telEntreprise = telEntreprise;
    }

    
    @Column(name="autre_contact", length=45)
    public String getAutreContact() {
        return this.autreContact;
    }
    
    public void setAutreContact(String autreContact) {
        this.autreContact = autreContact;
    }

    
    @Column(name="image")
    public String getImage() {
        return this.image;
    }
    
    public void setImage(String image) {
        this.image = image;
    }

    
    @Column(name="idutilisateur")
    public Integer getIdutilisateur() {
        return this.idutilisateur;
    }
    
    public void setIdutilisateur(Integer idutilisateur) {
        this.idutilisateur = idutilisateur;
    }

    
    @Column(name="imageblob")
    public byte[] getImageblob() {
        return this.imageblob;
    }
    
    public void setImageblob(byte[] imageblob) {
        this.imageblob = imageblob;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employeByIdrecepteur")
    public Set<Message> getMessagesForIdrecepteur() {
        return this.messagesForIdrecepteur;
    }
    
    public void setMessagesForIdrecepteur(Set<Message> messagesForIdrecepteur) {
        this.messagesForIdrecepteur = messagesForIdrecepteur;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<Visite> getVisites() {
        return this.visites;
    }
    
    public void setVisites(Set<Visite> visites) {
        this.visites = visites;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employeByIdemetteur")
    public Set<Message> getMessagesForIdemetteur() {
        return this.messagesForIdemetteur;
    }
    
    public void setMessagesForIdemetteur(Set<Message> messagesForIdemetteur) {
        this.messagesForIdemetteur = messagesForIdemetteur;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<Colis> getColises() {
        return this.colises;
    }
    
    public void setColises(Set<Colis> colises) {
        this.colises = colises;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<Entree> getEntrees() {
        return this.entrees;
    }
    
    public void setEntrees(Set<Entree> entrees) {
        this.entrees = entrees;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<Urgence> getUrgences() {
        return this.urgences;
    }
    
    public void setUrgences(Set<Urgence> urgences) {
        this.urgences = urgences;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employe")
    public Set<Utilisateur> getUtilisateurs() {
        return this.utilisateurs;
    }
    
    public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
        this.utilisateurs = utilisateurs;
    }




}


